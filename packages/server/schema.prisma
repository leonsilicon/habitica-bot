datasource db {
  provider = "sqlite"
  url      = "file:./database.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id String @id

  discordUserId String @unique

  habiticaUser   HabiticaUser? @relation("habiticaUser")
  habiticaUserId String        @unique

  // Whether the user's tasks are public (default false)
  areTasksPublic Boolean @default(false)

  integrations       Integration[]
  linearIntegrations LinearIntegration[]
}

model HabiticaUser {
  id String @unique

  user   User   @relation(name: "habiticaUser", fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  apiToken String
  name     String
  username String

  avatar HabiticaUserAvatar? @relation("habiticaUserAvatar")
}

model HabiticaUserAvatar {
  user   HabiticaUser @relation(name: "habiticaUserAvatar", fields: [userId], references: [id], onDelete: Cascade)
  userId String       @unique

  base64Data String
  isAnimated Boolean
}

model Integration {
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  linearIntegration LinearIntegration?
}

model LinearIntegration {
  integration Integration? @relation(fields: [userId], references: [userId], onDelete: Cascade)

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  apiKey String
}
